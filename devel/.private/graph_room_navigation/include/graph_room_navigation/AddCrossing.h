// Generated by gencpp from file graph_room_navigation/AddCrossing.msg
// DO NOT EDIT!


#ifndef GRAPH_ROOM_NAVIGATION_MESSAGE_ADDCROSSING_H
#define GRAPH_ROOM_NAVIGATION_MESSAGE_ADDCROSSING_H

#include <ros/service_traits.h>


#include <graph_room_navigation/AddCrossingRequest.h>
#include <graph_room_navigation/AddCrossingResponse.h>


namespace graph_room_navigation
{

struct AddCrossing
{

typedef AddCrossingRequest Request;
typedef AddCrossingResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct AddCrossing
} // namespace graph_room_navigation


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::graph_room_navigation::AddCrossing > {
  static const char* value()
  {
    return "dc1dde44f0b634a483bc0645dd3270ce";
  }

  static const char* value(const ::graph_room_navigation::AddCrossing&) { return value(); }
};

template<>
struct DataType< ::graph_room_navigation::AddCrossing > {
  static const char* value()
  {
    return "graph_room_navigation/AddCrossing";
  }

  static const char* value(const ::graph_room_navigation::AddCrossing&) { return value(); }
};


// service_traits::MD5Sum< ::graph_room_navigation::AddCrossingRequest> should match
// service_traits::MD5Sum< ::graph_room_navigation::AddCrossing >
template<>
struct MD5Sum< ::graph_room_navigation::AddCrossingRequest>
{
  static const char* value()
  {
    return MD5Sum< ::graph_room_navigation::AddCrossing >::value();
  }
  static const char* value(const ::graph_room_navigation::AddCrossingRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::graph_room_navigation::AddCrossingRequest> should match
// service_traits::DataType< ::graph_room_navigation::AddCrossing >
template<>
struct DataType< ::graph_room_navigation::AddCrossingRequest>
{
  static const char* value()
  {
    return DataType< ::graph_room_navigation::AddCrossing >::value();
  }
  static const char* value(const ::graph_room_navigation::AddCrossingRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::graph_room_navigation::AddCrossingResponse> should match
// service_traits::MD5Sum< ::graph_room_navigation::AddCrossing >
template<>
struct MD5Sum< ::graph_room_navigation::AddCrossingResponse>
{
  static const char* value()
  {
    return MD5Sum< ::graph_room_navigation::AddCrossing >::value();
  }
  static const char* value(const ::graph_room_navigation::AddCrossingResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::graph_room_navigation::AddCrossingResponse> should match
// service_traits::DataType< ::graph_room_navigation::AddCrossing >
template<>
struct DataType< ::graph_room_navigation::AddCrossingResponse>
{
  static const char* value()
  {
    return DataType< ::graph_room_navigation::AddCrossing >::value();
  }
  static const char* value(const ::graph_room_navigation::AddCrossingResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // GRAPH_ROOM_NAVIGATION_MESSAGE_ADDCROSSING_H
