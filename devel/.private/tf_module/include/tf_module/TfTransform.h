// Generated by gencpp from file tf_module/TfTransform.msg
// DO NOT EDIT!


#ifndef TF_MODULE_MESSAGE_TFTRANSFORM_H
#define TF_MODULE_MESSAGE_TFTRANSFORM_H

#include <ros/service_traits.h>


#include <tf_module/TfTransformRequest.h>
#include <tf_module/TfTransformResponse.h>


namespace tf_module
{

struct TfTransform
{

typedef TfTransformRequest Request;
typedef TfTransformResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct TfTransform
} // namespace tf_module


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::tf_module::TfTransform > {
  static const char* value()
  {
    return "e3031e602aea7b277ed3e5a9a7804b9a";
  }

  static const char* value(const ::tf_module::TfTransform&) { return value(); }
};

template<>
struct DataType< ::tf_module::TfTransform > {
  static const char* value()
  {
    return "tf_module/TfTransform";
  }

  static const char* value(const ::tf_module::TfTransform&) { return value(); }
};


// service_traits::MD5Sum< ::tf_module::TfTransformRequest> should match
// service_traits::MD5Sum< ::tf_module::TfTransform >
template<>
struct MD5Sum< ::tf_module::TfTransformRequest>
{
  static const char* value()
  {
    return MD5Sum< ::tf_module::TfTransform >::value();
  }
  static const char* value(const ::tf_module::TfTransformRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::tf_module::TfTransformRequest> should match
// service_traits::DataType< ::tf_module::TfTransform >
template<>
struct DataType< ::tf_module::TfTransformRequest>
{
  static const char* value()
  {
    return DataType< ::tf_module::TfTransform >::value();
  }
  static const char* value(const ::tf_module::TfTransformRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::tf_module::TfTransformResponse> should match
// service_traits::MD5Sum< ::tf_module::TfTransform >
template<>
struct MD5Sum< ::tf_module::TfTransformResponse>
{
  static const char* value()
  {
    return MD5Sum< ::tf_module::TfTransform >::value();
  }
  static const char* value(const ::tf_module::TfTransformResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::tf_module::TfTransformResponse> should match
// service_traits::DataType< ::tf_module::TfTransform >
template<>
struct DataType< ::tf_module::TfTransformResponse>
{
  static const char* value()
  {
    return DataType< ::tf_module::TfTransform >::value();
  }
  static const char* value(const ::tf_module::TfTransformResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TF_MODULE_MESSAGE_TFTRANSFORM_H
